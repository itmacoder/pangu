<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <context:property-placeholder
            location="classpath:redis.properties"/>

    <!-- jedis 配置 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <property name="maxTotal" value="${redis.maxActive}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>

    <!-- redis服务器中心 -->
    <bean id="redisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="poolConfig"/>
        <property name="port" value="${redis.port}"/>
        <property name="hostName" value="${redis.host}"/>
        <property name="password" value="${redis.password}"/>
        <property name="timeout" value="${redis.timeout}"/>
    </bean>

    <bean id="redisTemplate" name="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="redisConnectionFactory"/>
        <!--        <property name="keySerializer" ref="stringRedisSerializer"/>-->
        <!--        <property name="valueSerializer" ref="stringRedisSerializer"/>-->
        <!--        <property name="hashKeySerializer" ref="stringRedisSerializer"/>-->
        <!--        <property name="hashValueSerializer" ref="jackson2JsonRedisSerializer"/>-->
        <!-- <property name="enableTransactionSupport" value="true"/> -->
    </bean>

    <bean id="distributedLock" class="com.miaosuan.pangu.core.cache.lock.impl.RedisDistributedLock">
        <constructor-arg name="redisTemplate" ref="redisTemplate"/>
    </bean>
</beans>